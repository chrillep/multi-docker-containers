name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
#  schedule:
#    - cron: '31 18 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
    paths:
      - '**/Dockerfile'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build:
    strategy:
      matrix:
        path: [ "nginx", "php/8.1", "php/8.2", "php/8.3", "php-nginx-node-supervisor", "php-nginx-supervisor", "php-node-nginx" ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: Create Image Name
        id: create-image-name
        run: |
          echo "Path is ${{ matrix.path }}" >> "$GITHUB_STEP_SUMMARY"
          echo "IMAGE_TYPE=$(echo ${{ matrix.path }} | cut -d/ -f1)"  >> "$GITHUB_ENV"
          echo "IMAGE_TYPE=$(echo ${{ matrix.path }} | cut -d/ -f1)"  >> "$GITHUB_STEP_SUMMARY"
          echo "IMAGE_TAG=$(grep -m1 -oP '(?<=FROM\s)([a-z]+\/)?[a-z]+:[0-9]+\.[0-9]+\.[0-9]?' ${{ matrix.path }}/Dockerfile | cut -d: -f2 | cut -d@ -f1)"  >> "$GITHUB_ENV"
          echo "IMAGE_TAG=$(grep -m1 -oP '(?<=FROM\s)([a-z]+\/)?[a-z]+:[0-9]+\.[0-9]+\.[0-9]?' ${{ matrix.path }}/Dockerfile | cut -d: -f2 | cut -d@ -f1)"  >> "$GITHUB_STEP_SUMMARY"

      - name: set image name
        id: set-image-name
        run: |
          echo "IMAGE_NAME=${{github.repository_owner}}/$IMAGE_TYPE" >> "$GITHUB_ENV"
          echo "IMAGE_NAME=${{github.repository_owner}}/$IMAGE_TYPE" >> "$GITHUB_STEP_SUMMARY"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3.1.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#      - name: Login to DockerHub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v3.0.0
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ env.IMAGE_TAG }}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5.1.0
        with:
          platforms: linux/amd64,linux/arm64
          context: "{{defaultContext}}:${{ matrix.path }}"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}