name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '31 18 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
    paths:
      - '**/Dockerfile'
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        path: [ "nginx", "php/8.1", "php/8.2", "php/8.3", "php-nginx-node-supervisor", "php-nginx-supervisor", "php-node-nginx" ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
      - name: use matrix
        run: |
          echo "Path is ${{ matrix.path }}"
          echo "::set-output name=defaultContext::${{ matrix.path }}"
          echo "::set-output name=version::$(grep -oP 'ARG VERSION=\K.*' ${{ matrix.path }}/Dockerfile)"

#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3.0.0
#
#      # Workaround: https://github.com/docker/build-push-action/issues/461
#      - name: Setup Docker buildx
#        uses: docker/setup-buildx-action@v3.1.0
#
#      # Login against a Docker registry except on PR
#      # https://github.com/docker/login-action
#      - name: Log into registry ${{ env.REGISTRY }}
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v3.0.0
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
##      - name: Login to DockerHub
##        if: github.event_name != 'pull_request'
##        uses: docker/login-action@v3.0.0
##        with:
##          username: ${{ secrets.DOCKERHUB_USERNAME }}
##          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      # Extract metadata (tags, labels) for Docker
#      # https://github.com/docker/metadata-action
#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@v5.5.1
#        with:
#          images: |
#            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#          tags: |
#            type=raw,value=latest,enable={{is_default_branch}}
#            type=schedule
#            type=ref,event=branch
#            type=ref,event=tag
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#            type=sha
#
#      # Build and push Docker image with Buildx (don't push on PR)
#      # https://github.com/docker/build-push-action
#      - name: Build and push Docker image
#        id: build-and-push
#        uses: docker/build-push-action@v5.1.0
#        with:
##          platforms: linux/amd64,linux/arm/v7,linux/arm64
#          context: "{{defaultContext}}:php-nginx-node-supervisor"
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}